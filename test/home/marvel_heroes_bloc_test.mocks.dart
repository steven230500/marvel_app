/* // Mocks generated by Mockito 5.3.2 from annotations
// in marvel_app/test/home/marvel_heroes_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:marvel_app/app/helpers/error.dart' as _i5;
import 'package:marvel_app/models/comics.dart' as _i7;
import 'package:marvel_app/models/events.dart' as _i8;
import 'package:marvel_app/models/marvel.dart' as _i6;
import 'package:marvel_app/models/series.dart' as _i9;
import 'package:marvel_app/models/stories.dart' as _i10;
import 'package:marvel_app/repositories/heroes.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HeroesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHeroesRepository extends _i1.Mock implements _i3.HeroesRepository {
  MockHeroesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.ApiError, List<_i6.MarvelCharacter>>> fetchMarvelHeroes(
          {int? offset = 0}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMarvelHeroes,
          [],
          {#offset: offset},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.ApiError, List<_i6.MarvelCharacter>>>.value(
            _FakeEither_0<_i5.ApiError, List<_i6.MarvelCharacter>>(
          this,
          Invocation.method(
            #fetchMarvelHeroes,
            [],
            {#offset: offset},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.ApiError, List<_i6.MarvelCharacter>>>);
  @override
  _i4.Future<_i2.Either<_i5.ApiError, List<_i7.Comic>>> fetchCharacterComics(int? characterId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCharacterComics,
          [characterId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.ApiError, List<_i7.Comic>>>.value(
            _FakeEither_0<_i5.ApiError, List<_i7.Comic>>(
          this,
          Invocation.method(
            #fetchCharacterComics,
            [characterId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.ApiError, List<_i7.Comic>>>);
  @override
  _i4.Future<_i2.Either<_i5.ApiError, List<_i8.Event>>> fetchCharacterEvents(int? characterId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCharacterEvents,
          [characterId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.ApiError, List<_i8.Event>>>.value(
            _FakeEither_0<_i5.ApiError, List<_i8.Event>>(
          this,
          Invocation.method(
            #fetchCharacterEvents,
            [characterId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.ApiError, List<_i8.Event>>>);
  @override
  _i4.Future<_i2.Either<_i5.ApiError, List<_i9.Series>>> fetchCharacterSeries(int? characterId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCharacterSeries,
          [characterId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.ApiError, List<_i9.Series>>>.value(
            _FakeEither_0<_i5.ApiError, List<_i9.Series>>(
          this,
          Invocation.method(
            #fetchCharacterSeries,
            [characterId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.ApiError, List<_i9.Series>>>);
  @override
  _i4.Future<_i2.Either<_i5.ApiError, List<_i10.Story>>> fetchCharacterStories(int? characterId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCharacterStories,
          [characterId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.ApiError, List<_i10.Story>>>.value(
            _FakeEither_0<_i5.ApiError, List<_i10.Story>>(
          this,
          Invocation.method(
            #fetchCharacterStories,
            [characterId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.ApiError, List<_i10.Story>>>);
}
 */